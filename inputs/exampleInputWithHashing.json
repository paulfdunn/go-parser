{
    "Delimiter": "\\s\\s",
    "DelimiterString": "  ",
    "Extracts": [
        {
            "_comment": "capture string that starts with alpha or number, and contains alpha, number, [_.-:], that has leading space delimited",
            "Columns":      [7],
            "RegexString": "(^|\\s+)(([0-9]+[a-zA-Z_\\.-]|[a-zA-Z_\\.-]+[0-9])[a-zA-Z0-9\\.\\-_:]*)",
            "Token":       "${1}{}",
            "Submatch":    2
        },
        {
            "_comment": "capture word or [\\._] preceeded by' word='",
            "Columns":      [7],
            "RegexString": "(^|\\s+)([\\w]+[:=])([\\w:\\._]+)",
            "Token":       "${1}${2}{}",
            "Submatch":    3
        },
        {
            "_comment": "capture word or [\\.] in paretheses",
            "Columns":      [7],
            "RegexString": "(\\()([\\w:\\.]+)(\\))",
            "Token":       "${1}{}${3}",
            "Submatch":    2
        },
        {
            "_comment": "capture hex number preceeded by space",
            "Columns":      [7],
            "RegexString": "(^|\\s+)(0x[a-fA-F0-9]+)",
            "Token":       "${1}{}",
            "Submatch":    2
        },
        {
            "_comment": "capture number and [\\.:_] preceeded by space",
            "Columns":      [7],
            "RegexString": "(^|\\s+)([0-9\\.:_]+)",
            "Token":       "${1}{}",
            "Submatch":    2
        }
    ],
    "ExpectedFieldCount": 8,
    "HashColumns": [3,4,5,6,7],
    "NegativeFilter": "",
    "PositiveFilter": "(\\d{4}-\\d{2}-\\d{2}[ -]\\d{2}:\\d{2}:\\d{2}\\.\\d{2}\\s+[a-zA-Z]{2,5})",
    "Replacements": [
        {
            "_comment": "add extra spaces",
            "RegexString": "(\\d{4}-\\d{2}-\\d{2}[ -]\\d{2}:\\d{2}:\\d{2}\\.\\d{2}\\s+[a-zA-Z]{2,5})\\s+(\\d+)\\s+(\\d+)",
            "Replacement": "${1}  ${2}  ${3}  "
        },
        {
            "_comment": "remove extra spaces",
            "RegexString": "\\s\\s+",
            "Replacement": "  "
        }
    ]
}